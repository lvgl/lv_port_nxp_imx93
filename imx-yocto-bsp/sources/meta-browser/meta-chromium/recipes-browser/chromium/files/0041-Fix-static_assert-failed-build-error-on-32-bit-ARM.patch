From ddba656f3f0ff3406b689d04e97ca40016140b18 Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Thu, 5 Oct 2023 14:41:11 +0000
Subject: [PATCH] Fix "static_assert failed" build error on 32-bit ARM

117 introduced some code where a static_assert is guarded by a constexpr
if, and the assert will fail if the if-condition is false. Recent clang
versions (e.g. clang 17) are able to handle this, but with clang <= 15,
there is a build error because the static_assert fails.

Given that the code compiles fine with clang 17, we know that the logic
checks out, even if clang 14/15 is unable to recognize it. Thus, we just
comment out the static_assert.

Upstream-Status: Inappropriate [specific to older versions of clang]
Signed-off-by: Max Ihlenfeldt <max@igalia.com>
---
 v8/src/maglev/maglev-code-generator.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/v8/src/maglev/maglev-code-generator.cc b/v8/src/maglev/maglev-code-generator.cc
index e5ec70c..271a311 100644
--- a/v8/src/maglev/maglev-code-generator.cc
+++ b/v8/src/maglev/maglev-code-generator.cc
@@ -419,7 +419,7 @@ class ParallelMoveResolver {
   void EmitMovesFromSource(RegisterT source_reg, GapMoveTargets&& targets) {
     DCHECK(moves_from_register_[source_reg.code()].is_empty());
     if constexpr (DecompressIfNeeded) {
-      static_assert(COMPRESS_POINTERS_BOOL);
+      // static_assert(COMPRESS_POINTERS_BOOL);
       if (targets.needs_decompression == kNeedsDecompression) {
         __ DecompressTagged(source_reg, source_reg);
       }
@@ -462,7 +462,7 @@ class ParallelMoveResolver {
     // Decompress after the first move, subsequent moves reuse this register so
     // they're guaranteed to be decompressed.
     if constexpr (DecompressIfNeeded) {
-      static_assert(COMPRESS_POINTERS_BOOL);
+      // static_assert(COMPRESS_POINTERS_BOOL);
       if (targets.needs_decompression == kNeedsDecompression) {
         __ DecompressTagged(register_with_slot_value, register_with_slot_value);
         targets.needs_decompression = kDoesNotNeedDecompression;

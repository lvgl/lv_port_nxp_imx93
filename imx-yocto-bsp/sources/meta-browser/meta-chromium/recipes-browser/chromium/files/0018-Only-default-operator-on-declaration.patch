From 905cdd836a9968e13016ee4deabb65b122cd2eb5 Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Thu, 13 Apr 2023 12:08:01 +0000
Subject: [PATCH] Only default operator== on declaration

The requirement that the comparison operator can only be defaulted on
the first declaration was removed in P2085R0, which clang only supports
in versions 14 and above. Because dunfell still uses clang 12, we need
to fix the few occurrences where this requirement isn't met.

Upstream-Status: Inappropriate

Signed-off-by: Max Ihlenfeldt <max@igalia.com>
---
 .../core/browser/affiliation/affiliation_fetcher_base.cc     | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_base.h      | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_interface.h | 2 +-
 .../password_manager/core/browser/passkey_credential.cc      | 3 ---
 .../password_manager/core/browser/passkey_credential.h       | 5 +----
 components/password_manager/core/browser/password_form.cc    | 2 --
 components/password_manager/core/browser/password_form.h     | 2 +-
 7 files changed, 3 insertions(+), 17 deletions(-)

diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
index b23dbe1..f67da2e 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
@@ -185,7 +185,4 @@ void AffiliationFetcherBase::OnSimpleLoaderComplete(
   }
 }

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs) = default;
-
 }  // namespace password_manager
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
index baa57ab..fe6e322 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
@@ -80,9 +80,6 @@ class AffiliationFetcherBase : public virtual AffiliationFetcherInterface {
   std::unique_ptr<network::SimpleURLLoader> simple_url_loader_;
 };

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs);
-
 }  // namespace password_manager

 #endif  // COMPONENTS_PASSWORD_MANAGER_CORE_BROWSER_AFFILIATION_AFFILIATION_FETCHER_BASE_H_
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
index 5bf889f..946eabe 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
@@ -20,7 +20,7 @@ class AffiliationFetcherInterface {
     bool change_password_info = false;
     bool psl_extension_list = false;

-    friend bool operator==(const RequestInfo&, const RequestInfo&);
+    bool operator==(const RequestInfo& other) const = default;
   };

   AffiliationFetcherInterface() = default;
diff --git a/components/password_manager/core/browser/passkey_credential.cc b/components/password_manager/core/browser/passkey_credential.cc
index 1939e54..b3d57f0 100644
--- a/components/password_manager/core/browser/passkey_credential.cc
+++ b/components/password_manager/core/browser/passkey_credential.cc
@@ -96,7 +96,4 @@ std::u16string PasskeyCredential::GetAuthenticatorLabel() const {
   return l10n_util::GetStringUTF16(id);
 }

-bool operator==(const PasskeyCredential& lhs,
-                const PasskeyCredential& rhs) = default;
-
 }  // namespace password_manager
diff --git a/components/password_manager/core/browser/passkey_credential.h b/components/password_manager/core/browser/passkey_credential.h
index 42bf392..fcb53a7 100644
--- a/components/password_manager/core/browser/passkey_credential.h
+++ b/components/password_manager/core/browser/passkey_credential.h
@@ -75,8 +75,7 @@ class PasskeyCredential {
   const std::string& display_name() const { return display_name_; }

  private:
-  friend bool operator==(const PasskeyCredential& lhs,
-                         const PasskeyCredential& rhs);
+  bool operator==(const PasskeyCredential& other) const = default;

   // Authenticator type this passkey belongs to.
   Source source_;
@@ -106,8 +105,6 @@ class PasskeyCredential {
   absl::optional<std::u16string> authenticator_label_;
 };

-bool operator==(const PasskeyCredential& lhs, const PasskeyCredential& rhs);
-
 }  // namespace password_manager

 #endif  // COMPONENTS_PASSWORD_MANAGER_CORE_BROWSER_PASSKEY_CREDENTIAL_H_
diff --git a/components/password_manager/core/browser/password_form.cc b/components/password_manager/core/browser/password_form.cc
index d4976fa..6161547 100644
--- a/components/password_manager/core/browser/password_form.cc
+++ b/components/password_manager/core/browser/password_form.cc
@@ -239,8 +239,6 @@ AlternativeElement& AlternativeElement::operator=(AlternativeElement&& rhs) =

 AlternativeElement::~AlternativeElement() = default;

-bool AlternativeElement::operator==(const AlternativeElement&) const = default;
-
 bool AlternativeElement::operator<(const AlternativeElement& other) const {
   return std::tie(value, field_renderer_id, name) <
          std::tie(other.value, other.field_renderer_id, other.name);
diff --git a/components/password_manager/core/browser/password_form.h b/components/password_manager/core/browser/password_form.h
index cdda601..3b58eaf 100644
--- a/components/password_manager/core/browser/password_form.h
+++ b/components/password_manager/core/browser/password_form.h
@@ -44,7 +44,7 @@ struct AlternativeElement {
   AlternativeElement& operator=(AlternativeElement&& rhs);
   ~AlternativeElement();

-  bool operator==(const AlternativeElement&) const;
+  bool operator==(const AlternativeElement&) const = default;
   bool operator<(const AlternativeElement&) const;

   // The value of the field.
